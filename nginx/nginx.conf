events {}

http {
    include       /etc/nginx/mime.types;
    sendfile       on;
    server {
        listen 80;

        # Next.js frontend (root)
        location / {
            proxy_pass http://client:3000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_cache_bypass $http_upgrade;
        }

        # Node.js backend API - strip nothing (handled at /api)
        location /api/ {
            proxy_pass http://server:8080/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_cache_bypass $http_upgrade;
        }

        # WordPress - expose it under /blog/
        # IMPORTANT: this will proxy /blog/* -> / on wordpress container (strip prefix)
        location = /blog {
            return 301 /blog/;
        }

        location /blog/ {
            # strip /blog/ prefix when passing to wordpress
            proxy_pass http://wordpress:80/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_buffering off;
            proxy_redirect off;
        }
    }
}
